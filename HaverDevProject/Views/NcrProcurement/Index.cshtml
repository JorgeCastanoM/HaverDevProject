@model IEnumerable<HaverDevProject.Models.NcrProcurement>

@{
    ViewData["Title"] = "Index";
}

<h1><i class="bi bi-caret-right-fill"></i> Procurement Non-Conformance Reports</h1>


<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Procurement Pending NCRs</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="tableContainer" class="container border rounded">
                    <table class="table table-striped table-reponsive table-hover mt-2">
                        <thead class="custom-header-bg">
                            <tr>
                                <th>NCR Number</th>
                                <th>Supplier</th>
                                <th> </th>
                            </tr>
                        </thead>
                        <tbody id="tblBody">
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<form id="ncrForm" asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <input type="hidden" id="filter" name="filter" value="@ViewData["filter"]" />
    <div class="row mt-3 mb-2">
        <div class="col-8">
            <div class="d-flex justify-content-start">
                <input type="radio" class="btn-check btn-filter" name="filter" id="All" autocomplete="off" value="All" data-filter="All">
                <label class="btn @ViewData["filterApplied:ButtonAll"] me-2" for="All">All NCRs</label>

                <input type="radio" class="btn-check btn-filter" name="filter" id="Active" autocomplete="off" checked value="Active" data-filter="Active">
                <label class="btn @ViewData["filterApplied:ButtonActive"] me-2" for="Active">Active NCRs</label>

                <input type="radio" class="btn-check btn-filter" name="filter" id="Closed" autocomplete="off" value="Closed" data-filter="Closed">
                <label class="btn @ViewData["filterApplied:ButtonClosed"] me-2" for="Closed">Closed NCRs </label>


                @*            <input type="radio" class="btn-check btn-filter" name="filter" id="Active" autocomplete="off" checked value="Active" data-filter="Active">
                <label class="btn btn-success me-2" for="Active">Active NCRs</label>

                <input type="radio" class="btn-check btn-filter" name="filter" id="Closed" autocomplete="off" value="Closed" data-filter="Closed">
                <label class="btn btn-danger me-2" for="Closed">Closed NCRs </label> *@
                <button type="button" id="pendingCountIndicator" class="btn btn-warning btn-block me-2" data-bs-toggle="modal" data-bs-target="#staticBackdrop"></button>

                <a asp-action="ExportToExcel" class="btn btn-info float-end me-2"><i class="bi bi-download"></i> Download Log Report</a>
            </div>
        </div>
        <div class="col-4 d-flex justify-content-end">
            <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                @ViewData["numberFilters"]
            </button>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="card card-body bg-custom-color mb-2">
            <div class="row d-flex justify-content-center align-items-center">
                <div class="form-group col-lg-3 col-md-5 col-sm-10 col-10">
                    <label class="control-label">Filter by Suppliers:</label>
                    @Html.TextBox("SearchSupplier", null, new { @class = "form-control", placeholder = "Enter Supplier Name" })
                </div>
                <div class="form-group col-lg-2">
                    <label class="control-label">Start Date:</label>
                    @Html.TextBox("StartDate", @ViewData["StartDate"], new { @class = "form-control", type = "date" })

                </div>
                <div class="form-group col-lg-2">
                    <label class="control-label">End Date:</label>
                    @Html.TextBox("EndDate", @ViewData["EndDate"], new { @class = "form-control", type = "date" })
                </div>
                <div class="form-group col-lg-3 col-md-5 col-sm-10 col-10">
                    <label class="control-label mb-1">Find by NCR #:</label>
                    @Html.TextBox("SearchCode", null, new { @class = "form-control", placeholder = "Enter NCR # or Defect Name" })
                </div>
                <div class="form-group col-lg-2 col-md-7 col-sm-10 col-10 align-self-end">
                    <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary ms-2" />
                    <a asp-action="Index" class="btn btn-outline-dark ms-4">Clear</a>
                </div>
            </div>
        </div>
    </div>
    <table class="table table-hover table-striped">
        <thead class="custom-header-bg">
            <tr>
                <th></th>
                <th class="d-none d-md-table-cell">
                    <button type="submit" name="actionButton" value="Created" class="btn text-light custom-btn-text-start">
                        Created
                        @Html.Raw(ViewData["filterApplied:Created"])
                    </button>
                </th>
                <th>
                    <button type="submit" name="actionButton" value="NCR #" class="btn text-light custom-btn-text-start">
                        NCR #
                        @Html.Raw(ViewData["filterApplied:NcrNumber"])
                    </button>
                </th>
                <th class="col-3">
                    <button type="submit" name="actionButton" value="Supplier" class="btn text-light custom-btn-text-start">
                        Supplier
                        @Html.Raw(ViewData["filterApplied:Supplier"])
                    </button>
                </th>
                <th class="d-none d-md-table-cell col-auto">
                    <button type="submit" name="actionButton" value="Supplier Return" class="btn text-light custom-btn-text-start">
                        Supplier Return
                        @Html.Raw(ViewData["filterApplied:Supplier Return"])
                    </button>
                </th>
                <th class="d-none d-md-table-cell col-auto">
                    <button type="submit" name="actionButton" value="SAP" class="btn text-light custom-btn-text-start">
                        SAP Completed
                        @Html.Raw(ViewData["filterApplied:SAP"])
                    </button>
                </th>
                <th class="d-none d-md-table-cell">
                    <button type="submit" name="actionButton" value="Phase" class="btn text-light custom-btn-text-start">
                        Phase
                        @Html.Raw(ViewData["filterApplied:Phase"])
                    </button>
                </th>
                <th class="d-none d-xxl-table-cell">
                    <button type="submit" name="actionButton" value="Last Updated" class="btn text-light custom-btn-text-start">
                        Last Updated
                        @Html.Raw(ViewData["filterApplied:Last Updated"])
                    </button>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(ncr => ncr.Ncr.NcrPhase != NcrPhase.Archive))
            {
                <tr class="@(item.NcrProcFlagStatus ? "draft-row" : "")">
                    @if (item.NcrProcFlagStatus)
                    {
                        <td class="ps-1 draft-dot">
                            <i class="bi bi-circle-fill" data-bs-toggle="tooltip" data-bs-placement="top" title="Draft"></i>
                        </td>
                    }
                    else
                    {
                        <td class="ps-1 @((item.Ncr.NcrStatus == true) ? "stillactive" : "closed" )">
                            <i class="bi bi-circle-fill" data-bs-toggle="tooltip" data-bs-placement="top" title="@((item.Ncr.NcrStatus == true) ? "Active" : "Closed")"></i>
                        </td>
                    }
                    
                    <td class="d-none d-md-table-cell">
                        @Html.DisplayFor(modelItem => item.Ncr.NcrQa.NcrQacreationDate)
                    </td>
                    <td class="standout">
                        @Html.DisplayFor(modelItem => item.Ncr.NcrNumber)
                    </td>
                    <td class="col-3">
                        @Html.DisplayFor(modelItem => item.Ncr.NcrQa.Supplier.SupplierName)
                    </td>
                    <td class="col-auto">
                        <span class="badge @(item.NcrProcSupplierReturnReq ? "bg-success" : "bg-danger")">
                            @(item.NcrProcSupplierReturnReq ? "Yes" : "No")
                        </span>
                    </td>
                    <td class="col-auto">
                        <span class="badge @(item.NcrProcSAPReturnCompleted ? "bg-success" : "bg-danger")">
                            @(item.NcrProcSAPReturnCompleted ? "Yes" : "No")
                        </span>
                    </td>
                    <td class="d-none d-md-table-cell">
                        @Html.DisplayFor(modelItem => item.Ncr.NcrPhase)
                    </td>
                    <td class="d-none d-xxl-table-cell">
                        @Html.DisplayFor(modelItem => item.Ncr.NcrLastUpdated)
                    </td>
                    
                    @*                     <td class="d-none d-md-table-cell">
                @Html.DisplayFor(modelItem => item.Ncr.NcrEng.UpdatedOn)
                </td> *@
                    @* <td class="@((item.Ncr.NcrStatus == true) ? "stillactive" : "closed")">
                @Html.DisplayFor(modelItem => item.Ncr.NcrStatus)
                </td> *@


                    <td class="align-middle">
                      <div class="btn-group" role="group" aria-label="NCR Actions">
                        @if (item.NcrProcFlagStatus)
                        {
                                <a asp-action="Edit" asp-route-id="@item.NcrProcurementId" class="btn btn-sm btn-primary me-1" data-bs-toggle="tooltip" title="Edit Draft"><i class="bi bi-pencil-square"></i></a>
                        }
                        @if (item.Ncr.NcrPhase != NcrPhase.Closed && item.NcrProcFlagStatus == false)
                        {
                                <a asp-action="Edit" asp-route-id="@item.NcrProcurementId" class="btn btn-sm btn-primary me-1" data-bs-toggle="tooltip" title="Edit"><i class="bi bi-pencil-square"></i></a>
                        }
                        <a asp-controller="Report" asp-action="DownloadPDF" asp-route-id="@item.NcrId" class="btn btn-sm btn-primary me-1" data-bs-toggle="tooltip" title="Download PDF">
                            <i class="bi bi-file-earmark-pdf"></i>
                        </a>
                        <a asp-action="Details" asp-route-id="@item.NcrProcurementId" class="btn btn-sm btn-primary me-1" data-bs-toggle="tooltip" title="Details"><i class="bi bi-eye-fill"></i></a>                        
                        
                        @* <a asp-action="Delete" asp-route-id="@item.NcrQaId">Delete</a> *@
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>

@section Styles {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
}
@section Scripts {

    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/NcrPending.js"></script>

    <script>
        const section = "NcrProcurement"
        // Function to update the pending count indicator
        function updatePendingCountIndicator(section) {
            // Use AJAX to fetch the count from the server
            $.ajax({
                url: '@Url.Action("GetPendingCount", "NcrProcurement")',
                type: 'GET',
                success: function (data) {
                    // Update the content of the indicator
                    $('#pendingCountIndicator').html('<i class="bi bi-bell-fill"></i> Pending Procurement NCRs:  ' + data);
                },
                error: function () {
                    console.error('Error fetching pending count');
                }
            });
        }

        // Call the function when the page loads
        $(document).ready(function () {
            updatePendingCountIndicator();
        });
    </script>

    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.btn-filter').on('click', function () {
                $('#filter').val($(this).data('filter'));
                $('#ncrForm').submit();
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#StartDate, #EndDate").change(function () {
                dateValidation();
            });

            // Function to validate date
            function dateValidation() {
                var startDate = new Date($("#StartDate").val());
                var endDate = new Date($("#EndDate").val());

                // Verifying if End Date is less than Start Date
                if (endDate < startDate) {
                    alert("End date should be greater than Start Date");
                    $("#EndDate").val("");
                }
            }
        });
    </script>

    <!--For Autocomplete fields-->
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $('#SearchSupplier').autocomplete({
            minLength: 1,
            source: '@Url.Action("GetSuppliersAuto", "NcrQa")'
        });
    </script>

}

